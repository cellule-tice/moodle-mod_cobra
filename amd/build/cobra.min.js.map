{"version":3,"sources":["../src/cobra.js"],"names":["define","$","log","ajax","templates","notification","jsonparams","objparams","glossaryentries","initUi","hasClass","removeClass","attr","addClass","trigger","initData","args","JSON","parse","modFormTriggers","langbutton","langselect","corpusorder","collbutton","collselect","textselect","textlocalname","on","lang","find","text","val","en","nl","entryOnClick","conceptId","displayDetails","prevAll","each","nextAll","concordanceOnClick","displayFullConcordance","textGlossaryActions","promises","call","methodname","textid","courseid","course","userid","user","done","response","updateglossarydisplay","fail","exception","lingEntity","prev","lingentity","push","sort","a","b","entry","toLowerCase","datafortpl","iconclass","add","render","html","replaceWith","forEach","result","index","parseInt","splice","myGlossaryActions","currentElement","parent","remove","demoapikey","apikey","prop","isExpression","hide","conceptid","isexpr","params","examples","bilingual","quickindexitem","fullConcordanceDiv","idConcordance","idconcordance","type","show","entries","cmid","css"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log', 'core/ajax', 'core/templates', 'core/notification'], function($, log, ajax, templates, notification) {\n\n    var jsonparams;\n    var objparams;\n    var glossaryentries;\n    return {\n        initUi: function() {\n\n            if ($('body').hasClass('drawer-open-left')) {\n                $('body').removeClass('drawer-open-left');\n                $('#nav-drawer').attr('aria-hidden', 'true');\n                $('#nav-drawer').addClass('closed');\n                $('button[aria-controls=\"nav-drawer\"]').trigger('click');\n            }\n        },\n\n        initData: function(args) {\n            jsonparams = args;\n            objparams = JSON.parse(jsonparams);\n        },\n\n        modFormTriggers: function() {\n            var langbutton = $('#id_updatelanguage');\n            var langselect = $('#id_language');\n            var corpusorder = $('#id_corpusorder');\n            var collbutton = $('#id_selectcollection');\n            var collselect = $('#id_collection');\n            var textselect = $('#id_text');\n            var textlocalname = $('#id_name');\n\n            langselect.on('change', function() {\n                var lang = langselect.find('option:selected').text();\n                if (lang == 'EN') {\n                    corpusorder.val(objparams.en);\n                } else if (lang == 'NL') {\n                    corpusorder.val(objparams.nl);\n                }\n                langbutton.trigger('click');\n            });\n\n            collselect.on('change', function() {\n                collbutton.trigger('click');\n            });\n\n            textselect.on('change', function() {\n                if (textlocalname.val() == '') {\n                    textlocalname.val($('#id_text :selected').text());\n                }\n            });\n\n        },\n        entryOnClick: function() {\n            $('.lemma').on('click', function() {\n                $('.clicked').removeClass('clicked');\n                $('.emphasize').removeClass('emphasize');\n                var conceptId = $(this).attr('name');\n                $('.lemma[name=' + conceptId + ']').addClass('emphasize');\n                $(this).removeClass('emphasize');\n                $(this).addClass('clicked');\n\n                displayDetails(conceptId, false);\n            });\n            $('.expression').on('click', function() {\n                $('.clicked').removeClass('clicked');\n                $('.emphasize').removeClass('emphasize');\n                var conceptId = $(this).attr('name');\n\n                $('.expression[name=' + conceptId + ']').addClass('emphasize');\n                $(this).prevAll('span.expression').each(function() {\n                    if ($(this).attr('name') == conceptId) {\n                        $(this).removeClass('emphasize');\n                        $(this).addClass('clicked');\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                $(this).nextAll('span.expression').each(function() {\n                    if ($(this).attr('name') == conceptId) {\n                        $(this).removeClass('emphasize');\n                        $(this).addClass('clicked');\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                $(this).removeClass('emphasize');\n                $(this).addClass('clicked');\n                displayDetails(conceptId, true);\n            });\n\n        },\n        concordanceOnClick: function() {\n            $('#details').on('click', '.cc_source', function() {\n                displayFullConcordance($(this));\n            });\n        },\n        textGlossaryActions: function() {\n            // Load personal glossary entries.\n            var promises = ajax.call([{\n                methodname: 'mod_cobra_load_glossary',\n                args: {\n                    textid: objparams.text,\n                    courseid: objparams.course,\n                    userid: objparams.user\n                }\n            }]);\n            promises[0]\n                .done(function(response) {\n                    glossaryentries = response;\n                    updateglossarydisplay();\n                }).fail(notification.exception);\n\n            $('#details').on('click', '.glossaryadd', function() {\n                var lingEntity = $(this).prev().text();\n\n                var promises = ajax.call([{\n                    methodname: 'mod_cobra_add_to_glossary',\n                    args: {\n                        lingentity: lingEntity,\n                        textid: objparams.text,\n                        course: objparams.course,\n                        userid: objparams.user\n                    }\n                }]);\n\n                promises[0]\n                    .done(function(response) {\n                        // Add new entry to user personal glossary and sort glossary.\n                        glossaryentries.push(response);\n                        glossaryentries.sort(function(a, b) {\n                            if (a.entry.toLowerCase() < b.entry.toLowerCase()) {\n                                return -1;\n                            }\n                            if (a.entry.toLowerCase() > b.entry.toLowerCase()) {\n                                return 1;\n                            }\n                            return 0;\n                        });\n\n                        // Change icon in digest row.\n                        var datafortpl = new Array();\n                        datafortpl.lingentity = lingEntity;\n                        datafortpl.iconclass = 'inglossary';\n                        datafortpl.add = false;\n                        templates.render('mod_cobra/glossaryiconcell', datafortpl).done(function(html) {\n                            $('#displayOnClic').find('tr:first th:first img').replaceWith(html);\n                        }).fail(notification.exception);\n                        updateglossarydisplay();\n                    }).fail(notification.exception);\n            });\n\n            $('#myglossary').on('click', '.glossaryremove', function() {\n                var lingEntity = $(this).prev().text();\n\n                var promises = ajax.call([{\n                    methodname: 'mod_cobra_remove_from_glossary',\n                    args: {\n                        lingentity: lingEntity,\n                        course: objparams.course,\n                        userid: objparams.user\n                    }\n                }]);\n\n                promises[0]\n                    .done(function(response) {\n                        // Remove entry from displayed glossary and refresh view.\n                        glossaryentries.forEach(function(result, index) {\n                            if (parseInt(result.lingentity) === response.lingentity) {\n                                glossaryentries.splice(index, 1);\n                            }\n                        });\n\n                        // Change icon in digest row if deleted entry is displayed in entry details div.\n                        if ($('#displayOnClic').find('tr:first th:first span').text() == lingEntity) {\n                            var datafortpl = new Array();\n                            datafortpl.lingentity = lingEntity;\n                            datafortpl.iconclass = 'glossaryadd';\n                            datafortpl.add = true;\n\n                            templates.render('mod_cobra/glossaryiconcell', datafortpl).done(function(html) {\n                                $('#displayOnClic').find('tr:first th:first img').replaceWith(html);\n                            }).fail(notification.exception);\n                        }\n                        updateglossarydisplay();\n                    }).fail(notification.exception);\n            });\n\n        },\n        myGlossaryActions: function() {\n            $('#myglossary').on('click', '.glossaryremove', function() {\n                var lingEntity = $(this).find('span:first').text();\n                var currentElement = $(this);\n                var promises = ajax.call([{\n                    methodname: 'mod_cobra_remove_from_glossary',\n                    args: {\n                        lingentity: lingEntity,\n                        course: objparams.course,\n                        userid: objparams.user\n                    }\n                }]);\n                promises[0]\n                    .done(function(response) {\n                        // Remove entry from displayed glossary and refresh view.\n                        if (response.lingentity == lingEntity) {\n                            if ($(currentElement).hasClass('inDisplay')) {\n                                $(currentElement.parent().remove());\n                            }\n                        }\n                    }).fail(notification.exception);\n            });\n        },\n        demoapikey: function() {\n            $('#requestapikey').on('click', function() {\n                var promises = ajax.call([{\n                    methodname: 'mod_cobra_get_demo_api_key',\n                    args: {\n                    }\n                }]);\n                promises[0]\n                    .done(function(response) {\n                        $('#id_s_mod_cobra_apikey').val(response.apikey);\n\n                    }).fail(notification.exception);\n                $(this).prop('disabled', true);\n            });\n        },\n    };\n\n    /**\n     * Display details of clicked entry.\n     *\n     * @param {Integer} conceptId Identifier of current entry.\n     * @param {bool} isExpression Flag stating whether the current entry is an Expression or a word.\n     */\n    function displayDetails(conceptId, isExpression) {\n        $('#full_concordance').hide();\n\n        var promises = ajax.call([{\n            methodname: 'mod_cobra_get_entry',\n            args: {\n                conceptid: conceptId,\n                isexpr: isExpression,\n                params: jsonparams\n            }\n        }]);\n\n        promises[0]\n            .done(function(response) {\n                if (objparams.examples == 'bilingual') {\n                    response.bilingual = true;\n                }\n                templates.render('mod_cobra/entrydetails', response).done(function(html) {\n                    $('#details').html(html);\n\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n    }\n\n    /**\n     * Display full text of clicked concordance.\n     *\n     * @param {jQuery} quickindexitem the html element containing the shortened concordance.\n     */\n    function displayFullConcordance(quickindexitem) {\n        var fullConcordanceDiv = $('#full_concordance');\n        var idConcordance = quickindexitem.attr('name');\n\n        var promises = ajax.call([{\n            methodname: 'mod_cobra_get_full_concordance',\n            args: {\n                idconcordance: idConcordance\n            }\n        }]);\n\n        promises[0]\n            .done(function(response) {\n\n                if (objparams.examples == 'bilingual') {\n                    response.bilingual = true;\n                }\n                templates.render('mod_cobra/fullconcordance', response).done(function(html) {\n                    fullConcordanceDiv.html(html);\n                    fullConcordanceDiv.removeClass();\n                    fullConcordanceDiv.addClass(response.type);\n                    fullConcordanceDiv.show();\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n    }\n\n    /**\n     * Dynamically refresh personal glossary content.\n     */\n    function updateglossarydisplay() {\n        var datafortpl = new Array();\n        datafortpl.entries = glossaryentries;\n        datafortpl.cmid = objparams.cmid;\n        datafortpl.course = objparams.course;\n        templates.render('mod_cobra/intextglossary', datafortpl).done(function(html) {\n            $('#glossary').replaceWith(html);\n            // Adapt glossary height to text height.\n            $('#glossary').css('height', $('#cobratext').css('height'));\n\n        }).fail(notification.exception);\n    }\n});\n/* jshint ignore:end */\n"],"file":"cobra.min.js"}